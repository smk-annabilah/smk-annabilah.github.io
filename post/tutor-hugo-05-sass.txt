
-- -- -- Theme 03 - 01 -- -- -- Prepare -- -- --

(with your file manager)

Copy manually /themes/tutor-02 to /themes/tutor-03

Remove completely
* /themes/tutor-03/static/dist/css/

Create directory /themes/tutor-03/sass

$ cat config.toml
theme        = "tutor-03"

-- Prepare Boostrap Source

From bootstrap directory
Copy bootstrap-4.1.3/scss/* 
to /themes/tutor-03/sass/bootstrap

Change working directory

$ cd /themes/tutor-03

$ tree -d sass
sass
└── bootstrap
    ├── mixins
    └── utilities

3 directories

-- -- -- Theme 03 - 02 -- -- -- Bootstrap SASS -- -- --

$ sass --help

$ mkdir static/tutor/

$ sass --update sass:static
      write static/bootstrap/bootstrap-grid.css
      write static/bootstrap/bootstrap-grid.css.map
      write static/bootstrap/bootstrap-reboot.css
      write static/bootstrap/bootstrap-reboot.css.map
      write static/bootstrap/bootstrap.css
      write static/bootstrap/bootstrap.css.map

$ sass --watch sass:static
>>> Sass is watching for changes. Press Ctrl-C to stop.

$ cat layouts/partials/site-head.html

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>{{ .Page.Title | default .Site.Title }}</title>
  
    <link rel="stylesheet" type="text/css" href="{{ "bootstrap/bootstrap.css" | relURL }}">
</head>

-- -- -- Theme 03 - 03 -- -- -- Custom SCSS -- -- --

static/css/

-- Create Custom CSS


Rename

* static/css/blog.css to sass/css/_blog.scss
* static/css/bootstrap-custom.css to sass/css/_bootstrap-custom.scss
* static/css/sticky-footer-navbar.css to sass/css/_sticky-footer-navbar.scss

--

$ sass --watch sass:static
>>> Sass is watching for changes. Press Ctrl-C to stop.
>>> New template detected: sass/css/_blog.scss
>>> New template detected: sass/css/_bootstrap-custom.scss
>>> New template detected: sass/css/_sticky-footer-navbar.scss

--

Create main.css

$ cat to sass/css/main.scss

@import
    "sticky-footer-navbar",
    "blog",
    "bootstrap-custom"
;

$ sass --watch sass:static
>>> Sass is watching for changes. Press Ctrl-C to stop.
>>> New template detected: sass/css/main.scss
      write static/css/main.css
      write static/css/main.css.map
>>> Change detected to: sass/css/main.scss
      write static/css/main.css
      write static/css/main.css.map

--

$ tree static/css 
static/css
├── main.css
└── main.css.map

--

$ cat layouts/partials/site-head.html

<head>
    ...
  
    <link rel="stylesheet" type="text/css" href="{{ "boostrap/bootstrap.css" | relURL }}">
    <link rel="stylesheet" type="text/css" href="{{ "css/main.css" | relURL }}">
</head>

-- -- -- Theme 03 - 04 -- -- -- Bootswatch -- -- --

You can change bootstrap predfiened variable.
You can make your own variable ovveride.
And luckyly, you do not to reinvent the wheel,
there are already good color schemes,
in the internet.

* http://colormind.io/bootstrap/
* https://bootswatch.com/
* https://mdbootstrap.com/

--

$ git clone https://github.com/thomaspark/bootswatch

copy from bootswatch/dist/*
to themes/tutor-03/sass/bootswatch/

--

remove unnecessay files.

$ find themes/tutor-03/sass/bootswatch -name "bootstrap*" -exec rm {} \;

This will remove any all compiled bootstrap.css.
Saving some space.

--

Create bootswatch.css

$ cat sass/css/bootswatch.scss

@import
    "bootswatch/cerulean/variables",
    "bootstrap/bootstrap",
    "bootswatch/cerulean/bootswatch"
;

--

$ sass --watch sass:static
>>> Sass is watching for changes. Press Ctrl-C to stop.
>>> New template detected: sass/css/bootswatch.scss
      write static/css/bootswatch.css
      write static/css/bootswatch.css.map

--

$ cat layouts/partials/site-head.html

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>{{ .Page.Title | default .Site.Title }}</title>
  
    <link rel="stylesheet" type="text/css" href="{{ "css/bootswatch.css" | relURL }}">
    <link rel="stylesheet" type="text/css" href="{{ "css/main.css" | relURL }}">
</head>

--

You may switch to other template:
There is already some free swatch such as: cerulean, cosmo, cyborg, 
darkly, flatly, journal, litera, lumen, lux, materia, minty, pulse, 
sandstone, simplex, sketchy, slate, solar, spacelab, superhero, 
united, yeti.

$ cat sass/css/bootswatch.scss

@import
    "bootswatch/flatly/variables",
    "bootstrap/bootstrap",
    "bootswatch/flatly/bootswatch"
;

But sometimes you need some color adjustment, to match.
Here I remove the text-mute class from the span tag.

<footer class="footer bg-dark text-light">
  <div class="container text-center">
    <span>&copy; {{ now.Year }}.</span>
  </div>
</footer>

-- -- -- Theme 03 - 05 -- -- -- Custom Color Variable -- -- --

If you want, you can create your own custom color.
Supposed you want a pink feminine navbar,
you can just adjust the color.

$ cat sass/css/_variables.scss

// Variables

$pink:  #e83e8c !default;
$primary:  darken($pink, 10%) !default;

Note that, darken is sass function.

--

Do not forget to make the bootstrap.css

$ cat sass/css/bootstrap.scss

@import
    "bootstrap/functions",
    "variables",
    "bootstrap/bootstrap"
;

--

$ sass --watch sass:static
>>> Sass is watching for changes. Press Ctrl-C to stop.
>>> New template detected: sass/css/_variables.scss
>>> New template detected: sass/css/bootstrap.scss
      write static/css/bootstrap.css
      write static/css/bootstrap.css.map

--

Also change the site-head.html

$ cat layouts/partials/site-head.html

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>{{ .Page.Title | default .Site.Title }}</title>
  
    <link rel="stylesheet" type="text/css" href="{{ "css/bootstrap.css" | relURL }}">
    <link rel="stylesheet" type="text/css" href="{{ "css/main.css" | relURL }}">
</head>

--

And some adjustment, from bg-dark to bg-primary,
so the pink can also affect the hyperlink.

$ cat layouts/partials/site-footer.html

<footer class="footer bg-primary text-light">
  <div class="container text-center">
    <span>&copy; {{ now.Year }}.</span>
  </div>
</footer>

--

I also simplified the logo, to match the pink color.

$ cat layouts/partials/site-header.html

<header>
  <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-primary">
    <a class="navbar-brand" href="{{ .Site.BaseURL }}">
       <img src="{{ "images/logo-gear-pink.png" | absURL }}"
           alt="Logo" />
    </a>
...

-- -- -- Theme 03 - 06 -- -- -- Summary -- -- --

As a summary, here is the content of scss input:

$ tree sass/css
sass/css
├── _blog.scss
├── _bootstrap-custom.scss
├── bootstrap.scss
├── bootswatch.scss
├── main.scss
├── _sticky-footer-navbar.scss
└── _variables.scss

--

And the content of css output would be:

$ tree static/css 
static/css
├── bootstrap.css
├── bootstrap.css.map
├── bootswatch.css
├── bootswatch.css.map
├── main.css
└── main.css.map

With map, you can debug in object inspector.

-- -- -- Theme 03 - 07 -- -- -- Conclusion -- -- --

I do not go deep about sass, as this is not a bootstrap tutorial.

